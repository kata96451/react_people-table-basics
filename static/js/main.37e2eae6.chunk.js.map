{"version":3,"sources":["App.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeoplePage/PeoplePage.tsx","components/HomePage.tsx","index.tsx"],"names":["App","className","role","isActive","classNames","to","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","props","person","slug","sex","name","PeoplePage","useState","people","setPeople","loadingError","setLoadingError","isLoading","setIsLoading","useParams","useEffect","prepearedPeople","map","mother","find","motherName","father","fatherName","catch","finally","length","born","died","HomePage","createRoot","document","getElementById","render","path","element","replace","index"],"mappings":"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","file":"static/js/main.37e2eae6.chunk.js","sourcesContent":["import './App.scss';\nimport { NavLink, Outlet } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={\n              ({ isActive }) => classNames(\n                'navbar-item', { 'has-background-grey-lighter': isActive },\n              )\n            }\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={\n              ({ isActive }) => classNames(\n                'navbar-item', { 'has-background-grey-lighter': isActive },\n              )\n            }\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </main>\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: FC<Props> = (props) => {\n  const { person } = props;\n\n  return (\n    <Link\n      to={`/people/${person.slug}`}\n      className={classNames({ 'has-text-danger': person.sex === 'f' })}\n    >\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { FC, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader/Loader';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\nexport const PeoplePage: FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { slug } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(response => {\n        const prepearedPeople = response.map(person => ({\n          ...person,\n\n          mother: response.find(mother => mother.name === person.motherName),\n          father: response.find(father => father.name === person.fatherName),\n        }));\n\n        setPeople(prepearedPeople);\n      })\n      .catch(() => setLoadingError(true))\n      .finally(() => setIsLoading(false));\n  }, [setIsLoading]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? <Loader />\n            : (\n              <>\n                {loadingError && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    Something went wrong\n                  </p>\n                )}\n\n                {!loadingError && (people.length === 0 ? (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                ) : (\n                  <table\n                    data-cy=\"peopleTable\"\n                    // eslint-disable-next-line max-len\n                    className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {people.map(person => (\n                        <tr\n                          data-cy=\"person\"\n                          key={person.slug}\n                          className={\n                            classNames({\n                              'has-background-warning': slug === person.slug,\n                            })\n                          }\n                        >\n                          <td>\n                            <PersonLink person={person} />\n                          </td>\n\n                          <td>{person.sex}</td>\n                          <td>{person.born}</td>\n                          <td>{person.died}</td>\n\n                          <td>\n                            {person.mother\n                              ? (<PersonLink person={person.mother} />)\n                              : (person.motherName || '-')}\n                          </td>\n\n                          <td>\n                            {person.father\n                              ? (<PersonLink person={person.father} />)\n                              : (person.fatherName || '-')}\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                ))}\n              </>\n            )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { HomePage } from './components/HomePage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Route>\n      </Routes>\n    </Router>,\n  );\n"],"sourceRoot":""}